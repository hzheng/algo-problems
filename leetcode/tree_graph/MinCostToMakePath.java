import java.util.*;

import org.junit.Test;

import static org.junit.Assert.*;

// LC1368: https://leetcode.com/problems/minimum-cost-to-make-at-least-one-valid-path-in-a-grid/
//
// Given a m x n grid. Each cell of the grid has a sign pointing to the next cell you should visit
// if you are currently in this cell. The sign of grid[i][j] can be:
// 1 which means go to the cell to the right. (i.e go from grid[i][j] to grid[i][j + 1])
// 2 which means go to the cell to the left. (i.e go from grid[i][j] to grid[i][j - 1])
// 3 which means go to the lower cell. (i.e go from grid[i][j] to grid[i + 1][j])
// 4 which means go to the upper cell. (i.e go from grid[i][j] to grid[i - 1][j])
// There could be some invalid signs on the cells of the grid which points outside the grid.
// You will initially start at the upper left cell (0,0). A valid path in the grid is a path which
// starts from the upper left cell (0,0) and ends at the bottom-right cell (m - 1, n - 1) following
// the signs on the grid. The valid path doesn't have to be the shortest. You can modify the sign on
// a cell with cost = 1. You can modify the sign on a cell one time only.
// Return the minimum cost to make the grid have at least one valid path.
//
// Constraints:
// m == grid.length
// n == grid[i].length
// 1 <= m, n <= 100
public class MinCostToMakePath {
    private static final int[][] MOVES = {{0, 1}, {0, -1}, {1, 0}, {-1, 0}};

    // DFS + Recursion + Set
    // time complexity: O(4^(M*N)), space complexity: O(M*N)
    // 2183 ms(5.13%), 40.9 MB(27.60%) for 68 tests
    public int minCost(int[][] grid) {
        int m = grid.length;
        int n = grid[0].length;
        int[][] dp = new int[m][n];
        for (int i = 0; i < m; i++) {
            Arrays.fill(dp[i], m * n + 1);
        }
        dfs(grid, 0, 0, 0, new boolean[m][n], dp);
        return dp[m - 1][n - 1];
    }

    private void dfs(int[][] grid, int x, int y, int cost, boolean[][] visited, int[][] dp) {
        int m = grid.length;
        int n = grid[0].length;
        if (x < 0 || x >= m || y < 0 || y >= n || visited[x][y]) { return; }

        if (dp[x][y] <= cost) { return; }

        dp[x][y] = cost;
        if (x == m - 1 && y == n - 1) { return; }

        visited[x][y] = true;
        int dir = grid[x][y] - 1;
        dfs(grid, x + MOVES[dir][0], y + MOVES[dir][1], cost, visited, dp); // must DFS first!
        for (int i = 0; i < MOVES.length; i++) {
            if (i != dir) {
                dfs(grid, x + MOVES[i][0], y + MOVES[i][1], cost + 1, visited, dp);
            }
        }
        visited[x][y] = false;
    }

    // Dijkstra's algorithm + Heap + Set
    // time complexity: O(M*N*log(M*N)), space complexity: O(M*N)
    // 79 ms(11.76%), 51.4 MB(12.30%) for 68 tests
    public int minCost2(int[][] grid) {
        PriorityQueue<int[]> queue = new PriorityQueue<>(Comparator.comparingInt(p -> p[2]));
        int m = grid.length;
        int n = grid[0].length;
        boolean[][] visited = new boolean[m][n];
        for (queue.offer(new int[3]); ; ) {
            int[] cur = queue.poll();
            int x = cur[0];
            int y = cur[1];
            int cost = cur[2];
            if (x == m - 1 && y == n - 1) { return cost; }
            if (visited[x][y]) { continue; }

            visited[x][y] = true;
            for (int i = MOVES.length; i > 0; i--) {
                int[] move = MOVES[i - 1];
                int nx = x + move[0];
                int ny = y + move[1];
                if (nx >= 0 && nx < m && ny >= 0 && ny < n) {
                    queue.offer(new int[] {nx, ny, cost + (i == grid[x][y] ? 0 : 1)});
                }
            }
        }
    }

    // Solution of Choice
    // BFS + Deque + Set
    // time complexity: O(M*N), space complexity: O(M*N)
    // 13 ms(68.45%), 40 MB(52.41%) for 68 tests
    public int minCost3(int[][] grid) {
        int m = grid.length;
        int n = grid[0].length;
        boolean[][] visited = new boolean[m][n];
        Deque<int[]> deque = new ArrayDeque<>();
        for (deque.offer(new int[3]); ; ) {
            int[] cur = deque.poll();
            int x = cur[0];
            int y = cur[1];
            int cost = cur[2];
            if (x == m - 1 && y == n - 1) { return cost; }
            if (visited[x][y]) { continue; }

            visited[x][y] = true;
            for (int i = 0; i < MOVES.length; i++) {
                int nx = x + MOVES[i][0];
                int ny = y + MOVES[i][1];
                if (nx < 0 || nx >= m || ny < 0 || ny >= n) { continue; }

                if (i + 1 == grid[x][y]) {
                    deque.offerFirst(new int[] {nx, ny, cost});
                } else {
                    deque.offerLast(new int[] {nx, ny, cost + 1});
                }
            }
        }
    }

    // DFS + Recursion + BFS + Queue
    // time complexity: O(M*N), space complexity: O(M*N)
    // 8 ms(98.53%), 40.8 MB(30.48%) for 68 tests
    public int minCost4(int[][] grid) {
        int m = grid.length;
        int n = grid[0].length;
        int[][] dp = new int[m][n];
        for (int i = 0; i < m; i++) {
            Arrays.fill(dp[i], Integer.MAX_VALUE);
        }
        Queue<int[]> queue = new LinkedList<>();
        dfs(grid, 0, 0, dp, 0, queue);
        for (int cost = 1; !queue.isEmpty(); cost++) {
            for (int size = queue.size(); size > 0; size--) {
                int[] cur = queue.poll();
                int x = cur[0];
                int y = cur[1];
                for (int[] move : MOVES) {
                    dfs(grid, x + move[0], y + move[1], dp, cost, queue);
                }
            }
        }
        return dp[m - 1][n - 1];
    }

    private void dfs(int[][] grid, int x, int y, int[][] dp, int cost, Queue<int[]> queue) {
        int m = grid.length;
        int n = grid[0].length;
        if (x < 0 || x >= m || y < 0 || y >= n || dp[x][y] != Integer.MAX_VALUE) { return; }

        dp[x][y] = cost;
        queue.offer(new int[] {x, y});
        int dir = grid[x][y] - 1;
        dfs(grid, x + MOVES[dir][0], y + MOVES[dir][1], dp, cost, queue);
    }

    private void test(int[][] grid, int expected) {
        assertEquals(expected, minCost(grid));
        assertEquals(expected, minCost2(grid));
        assertEquals(expected, minCost3(grid));
        assertEquals(expected, minCost4(grid));
    }

    @Test public void test() {
        test(new int[][] {{1, 1, 1, 1}, {2, 2, 2, 2}, {1, 1, 1, 1}, {2, 2, 2, 2}}, 3);
        test(new int[][] {{1, 1, 3}, {3, 2, 2}, {1, 1, 4}}, 0);
        test(new int[][] {{1, 2}, {4, 3}}, 1);
        test(new int[][] {{2, 2, 2}, {2, 2, 2}}, 3);
        test(new int[][] {{4}}, 0);
        test(new int[][] {{3, 4, 3}, {2, 2, 2}, {2, 1, 1}, {4, 3, 2}, {2, 1, 4}, {2, 4, 1},
                          {3, 3, 3}, {1, 4, 2}, {2, 2, 1}, {2, 1, 1}, {3, 3, 1}, {4, 1, 4},
                          {2, 1, 4}, {3, 2, 2}, {3, 3, 1}, {4, 4, 1}, {1, 2, 2}, {1, 1, 1},
                          {1, 3, 4}, {1, 2, 1}, {2, 2, 4}, {2, 1, 3}, {1, 2, 1}, {4, 3, 2},
                          {3, 3, 4}, {2, 2, 1}, {3, 4, 3}, {4, 2, 3}, {4, 4, 4}}, 18);
        test(new int[][] {
                     {2, 2, 1, 1, 2, 4, 3, 4, 4, 2, 3, 3, 2, 1, 3, 3, 3, 3, 3, 1, 3, 1, 2, 2, 4, 1, 2},
                     {2, 3, 3, 1, 4, 2, 3, 4, 3, 3, 2, 3, 4, 1, 3, 1, 3, 3, 1, 1, 4, 1, 2, 2, 3, 4, 1},
                     {1, 4, 3, 4, 1, 4, 4, 3, 4, 2, 3, 4, 1, 3, 2, 4, 2, 2, 4, 2, 2, 2, 4, 2, 4, 1, 4},
                     {1, 2, 2, 2, 1, 4, 2, 4, 2, 1, 4, 1, 2, 3, 3, 4, 4, 3, 4, 3, 2, 2, 2, 3, 1, 3, 4},
                     {1, 3, 1, 3, 3, 2, 1, 1, 2, 1, 1, 2, 3, 4, 2, 2, 1, 1, 2, 1, 2, 4, 1, 1, 4, 4, 1},
                     {4, 4, 4, 3, 2, 2, 3, 2, 3, 4, 3, 3, 1, 2, 3, 2, 4, 1, 2, 3, 3, 2, 3, 4, 4, 2, 4},
                     {2, 3, 2, 1, 2, 1, 4, 1, 1, 3, 2, 4, 2, 2, 2, 1, 4, 3, 3, 3, 4, 2, 1, 3, 4, 2, 1},
                     {4, 4, 4, 2, 3, 2, 3, 1, 3, 2, 4, 4, 4, 1, 4, 4, 1, 4, 4, 4, 2, 1, 3, 4, 3, 1, 3},
                     {4, 2, 4, 1, 3, 2, 4, 3, 1, 1, 1, 4, 3, 1, 2, 3, 4, 2, 1, 1, 1, 2, 4, 4, 4, 4, 2},
                     {2, 2, 4, 3, 2, 2, 4, 2, 4, 4, 1, 4, 3, 2, 4, 4, 2, 2, 1, 2, 1, 3, 1, 2, 4, 2, 2},
                     {1, 4, 3, 2, 1, 4, 2, 4, 4, 4, 3, 3, 2, 1, 3, 4, 3, 1, 4, 4, 4, 4, 1, 1, 4, 3, 4},
                     {1, 1, 2, 3, 3, 4, 4, 4, 1, 4, 4, 3, 3, 3, 3, 4, 4, 1, 4, 4, 1, 3, 4, 3, 1, 2, 4},
                     {1, 3, 3, 2, 1, 2, 3, 2, 1, 1, 2, 1, 4, 4, 2, 3, 3, 3, 1, 3, 3, 1, 1, 1, 1, 1, 4},
                     {1, 2, 1, 2, 2, 2, 3, 1, 2, 3, 4, 3, 2, 4, 2, 1, 2, 2, 2, 2, 3, 2, 4, 1, 3, 1, 3},
                     {3, 4, 4, 3, 3, 3, 4, 4, 4, 1, 2, 1, 3, 1, 2, 2, 3, 3, 3, 4, 3, 1, 2, 1, 3, 3, 1},
                     {2, 1, 1, 4, 1, 3, 4, 1, 2, 4, 3, 2, 2, 2, 1, 3, 1, 2, 3, 2, 3, 3, 4, 4, 1, 1, 1},
                     {2, 3, 3, 4, 2, 2, 3, 2, 2, 2, 4, 3, 1, 4, 4, 1, 4, 1, 3, 2, 4, 3, 4, 2, 4, 4, 2},
                     {4, 3, 1, 2, 4, 4, 3, 4, 2, 1, 3, 2, 1, 2, 2, 1, 2, 4, 3, 1, 2, 1, 1, 4, 2, 4, 1},
                     {2, 2, 4, 2, 4, 2, 1, 1, 4, 3, 2, 1, 3, 1, 1, 4, 4, 3, 1, 3, 2, 3, 2, 2, 4, 1, 1},
                     {1, 1, 1, 4, 1, 3, 4, 1, 4, 2, 1, 4, 4, 2, 2, 3, 1, 4, 2, 3, 1, 3, 4, 3, 1, 1, 3},
                     {1, 3, 4, 2, 2, 4, 1, 4, 3, 2, 4, 1, 2, 3, 4, 4, 3, 2, 1, 2, 4, 1, 2, 1, 1, 4, 3},
                     {4, 3, 2, 3, 1, 3, 4, 1, 4, 2, 3, 2, 2, 4, 1, 2, 3, 3, 4, 1, 3, 1, 4, 2, 4, 1, 2},
                     {2, 3, 3, 2, 3, 3, 1, 1, 4, 3, 1, 3, 1, 4, 1, 4, 1, 3, 1, 3, 2, 3, 2, 1, 1, 2, 2},
                     {1, 1, 2, 3, 3, 4, 1, 2, 1, 1, 3, 1, 1, 1, 2, 3, 3, 1, 4, 4, 4, 1, 4, 1, 2, 2, 2},
                     {1, 2, 3, 1, 3, 1, 2, 4, 4, 2, 4, 3, 1, 2, 3, 4, 4, 3, 2, 4, 3, 2, 1, 3, 2, 3, 4},
                     {2, 3, 2, 4, 2, 1, 1, 4, 4, 1, 4, 3, 2, 3, 4, 3, 1, 3, 2, 3, 2, 3, 2, 2, 4, 4, 4},
                     {2, 1, 4, 4, 4, 1, 2, 1, 2, 2, 3, 4, 3, 3, 2, 1, 2, 2, 3, 1, 2, 1, 2, 3, 3, 4, 3},
                     {2, 1, 3, 4, 1, 1, 4, 1, 3, 3, 2, 1, 3, 3, 2, 3, 3, 2, 1, 2, 2, 3, 3, 2, 4, 4, 3},
                     {1, 2, 2, 3, 2, 1, 2, 2, 3, 3, 2, 2, 4, 2, 3, 2, 1, 3, 4, 4, 4, 2, 4, 4, 1, 1, 3},
                     {4, 1, 3, 2, 2, 3, 2, 3, 4, 2, 2, 1, 3, 3, 2, 3, 4, 1, 4, 2, 3, 1, 4, 1, 2, 2, 4},
                     {2, 2, 2, 1, 1, 4, 1, 1, 1, 1, 2, 3, 2, 4, 2, 4, 2, 3, 1, 1, 3, 4, 2, 1, 1, 1, 1},
                     {3, 1, 3, 4, 1, 3, 1, 4, 3, 1, 2, 1, 1, 3, 2, 4, 4, 1, 3, 4, 2, 1, 3, 3, 1, 4, 3},
                     {3, 4, 4, 1, 2, 1, 2, 4, 2, 2, 1, 1, 3, 2, 3, 4, 4, 1, 2, 4, 2, 1, 3, 3, 1, 4, 4},
                     {2, 2, 1, 1, 3, 4, 3, 1, 3, 3, 2, 2, 3, 2, 2, 1, 2, 3, 1, 4, 2, 1, 1, 1, 1, 2, 2},
                     {1, 1, 4, 4, 4, 2, 3, 4, 3, 1, 4, 1, 1, 2, 1, 2, 3, 1, 1, 2, 3, 2, 4, 4, 4, 3, 3},
                     {3, 4, 4, 2, 1, 3, 2, 3, 4, 4, 4, 3, 3, 1, 3, 4, 1, 3, 4, 4, 4, 4, 4, 2, 1, 3, 4},
                     {2, 2, 3, 1, 1, 4, 2, 2, 4, 3, 4, 4, 2, 3, 2, 1, 4, 4, 4, 2, 4, 2, 2, 1, 3, 2, 2},
                     {1, 2, 3, 1, 1, 1, 4, 1, 3, 2, 3, 3, 4, 2, 2, 1, 2, 4, 3, 1, 2, 2, 3, 2, 2, 2, 4},
                     {3, 1, 2, 2, 2, 4, 3, 2, 1, 3, 1, 2, 4, 1, 3, 4, 1, 2, 2, 3, 2, 3, 3, 4, 4, 1, 2},
                     {1, 4, 4, 2, 1, 3, 4, 1, 4, 4, 4, 4, 4, 3, 1, 3, 3, 2, 1, 4, 2, 4, 4, 2, 4, 2, 2},
                     {1, 4, 1, 1, 2, 1, 2, 4, 1, 4, 1, 4, 2, 1, 3, 4, 1, 4, 1, 2, 3, 1, 3, 1, 4, 3, 3},
                     {4, 2, 2, 2, 2, 2, 2, 4, 4, 3, 2, 1, 4, 4, 1, 3, 3, 2, 3, 3, 2, 1, 3, 1, 3, 1, 1},
                     {4, 3, 2, 3, 2, 3, 3, 2, 4, 1, 4, 2, 2, 2, 3, 1, 4, 3, 3, 1, 4, 3, 4, 1, 1, 2, 4},
                     {3, 1, 1, 1, 2, 2, 4, 3, 2, 1, 3, 3, 1, 1, 2, 1, 4, 2, 3, 4, 2, 1, 1, 1, 1, 3, 3},
                     {2, 3, 3, 1, 4, 3, 3, 3, 2, 4, 3, 2, 1, 4, 4, 3, 4, 2, 2, 1, 3, 3, 3, 2, 4, 4, 3},
                     {2, 2, 2, 2, 4, 4, 1, 1, 3, 2, 4, 2, 4, 1, 3, 3, 2, 1, 1, 2, 3, 3, 1, 3, 2, 4, 4},
                     {3, 2, 4, 3, 1, 2, 1, 3, 3, 3, 2, 3, 3, 4, 4, 1, 4, 1, 1, 3, 2, 4, 1, 1, 1, 1, 1},
                     {1, 1, 3, 2, 2, 4, 1, 4, 2, 3, 1, 1, 4, 2, 3, 2, 1, 3, 3, 3, 1, 2, 3, 3, 3, 3, 1},
                     {1, 1, 4, 4, 2, 4, 4, 1, 1, 1, 4, 4, 2, 4, 1, 1, 1, 3, 2, 2, 3, 3, 1, 2, 3, 3, 1},
                     {4, 3, 1, 3, 4, 4, 4, 4, 3, 4, 3, 1, 3, 1, 1, 3, 3, 4, 1, 2, 2, 4, 2, 2, 2, 3, 4},
                     {3, 2, 1, 2, 4, 2, 4, 2, 2, 4, 1, 4, 1, 3, 4, 4, 1, 4, 3, 3, 4, 3, 2, 1, 4, 2, 3},
                     {4, 1, 1, 2, 4, 1, 4, 3, 3, 2, 4, 4, 1, 2, 2, 1, 4, 1, 1, 3, 1, 2, 1, 1, 1, 4, 2},
                     {3, 4, 2, 4, 2, 4, 2, 2, 2, 1, 3, 2, 3, 2, 4, 4, 2, 2, 4, 4, 3, 4, 4, 1, 2, 2, 2},
                     {3, 1, 4, 2, 3, 3, 2, 1, 1, 3, 2, 1, 1, 1, 3, 1, 1, 1, 4, 4, 2, 4, 2, 1, 3, 2, 4},
                     {4, 4, 2, 2, 1, 3, 2, 3, 1, 2, 2, 3, 4, 1, 3, 1, 1, 1, 3, 3, 4, 3, 1, 3, 1, 3, 4},
                     {2, 1, 3, 2, 1, 4, 4, 4, 2, 4, 1, 2, 3, 2, 4, 2, 3, 3, 2, 2, 3, 2, 4, 4, 1, 4, 1},
                     {1, 1, 3, 2, 3, 4, 1, 1, 4, 1, 1, 2, 2, 4, 1, 2, 1, 4, 1, 4, 2, 1, 2, 1, 1, 4, 1},
                     {1, 3, 1, 2, 1, 4, 2, 4, 2, 2, 1, 3, 2, 2, 3, 3, 1, 3, 4, 4, 2, 2, 1, 2, 2, 3, 4},
                     {2, 3, 3, 4, 4, 4, 2, 4, 4, 3, 2, 4, 3, 3, 1, 3, 4, 2, 2, 2, 2, 2, 3, 3, 4, 3, 1},
                     {2, 3, 3, 2, 1, 2, 3, 2, 3, 4, 2, 3, 3, 2, 4, 4, 1, 4, 3, 4, 2, 4, 2, 1, 3, 2, 4},
                     {1, 1, 3, 2, 1, 3, 1, 3, 3, 4, 3, 3, 1, 4, 2, 4, 3, 3, 3, 2, 4, 2, 1, 4, 1, 2, 3},
                     {4, 2, 4, 1, 4, 4, 3, 3, 4, 2, 4, 3, 1, 4, 1, 4, 2, 4, 3, 3, 2, 3, 2, 4, 4, 2, 2},
                     {4, 2, 4, 3, 4, 1, 1, 1, 4, 3, 3, 2, 1, 1, 1, 2, 4, 4, 2, 2, 4, 4, 4, 2, 2, 1, 3},
                     {4, 4, 4, 3, 1, 1, 4, 3, 4, 3, 4, 4, 2, 3, 2, 4, 2, 3, 4, 3, 4, 4, 4, 3, 4, 4, 3},
                     {4, 3, 2, 1, 3, 1, 1, 4, 2, 1, 4, 1, 2, 3, 4, 4, 3, 3, 2, 4, 3, 2, 4, 4, 4, 4, 3},
                     {1, 2, 4, 3, 1, 1, 4, 2, 1, 4, 2, 3, 1, 3, 1, 4, 3, 4, 3, 3, 4, 4, 3, 1, 2, 1, 3}},
             28);
        test(new int[][] {
                {4, 2, 2, 1, 2, 3, 3, 3, 2, 2, 3, 4, 2, 1, 4, 3, 1, 1, 2, 4, 4, 3, 4, 1, 2, 2, 3, 1,
                 2, 4, 1, 4, 4, 4, 3, 1, 4, 4, 3, 4, 4, 3, 4, 3, 4, 3, 2, 3, 4, 2, 1, 2, 3, 3, 1, 1,
                 3, 2, 4, 2, 3, 2, 3, 1, 2, 1, 3, 2, 3, 1, 4, 2, 4, 1, 3, 2, 4, 3, 1, 3, 4, 2, 2,
                 4},
                {3, 1, 4, 2, 1, 2, 3, 3, 4, 2, 2, 3, 4, 3, 4, 2, 1, 2, 1, 1, 4, 2, 2, 4, 2, 1, 2, 1,
                 4, 4, 1, 3, 3, 2, 1, 4, 1, 2, 2, 3, 2, 1, 1, 3, 2, 3, 1, 1, 2, 1, 1, 3, 2, 3, 4, 2,
                 2, 3, 3, 3, 3, 3, 2, 4, 2, 1, 2, 2, 2, 4, 2, 4, 1, 2, 3, 4, 1, 2, 2, 3, 1, 2, 3,
                 4},
                {2, 2, 3, 4, 3, 4, 3, 4, 1, 3, 1, 2, 4, 4, 2, 1, 2, 3, 2, 2, 2, 2, 3, 1, 3, 3, 2, 2,
                 2, 1, 1, 3, 4, 3, 1, 2, 2, 4, 4, 4, 2, 1, 3, 3, 2, 4, 3, 3, 2, 4, 1, 2, 4, 2, 2, 3,
                 4, 1, 1, 2, 3, 1, 2, 4, 1, 2, 3, 2, 3, 4, 2, 4, 1, 1, 2, 3, 3, 4, 2, 2, 1, 1, 2,
                 1},
                {3, 1, 4, 4, 4, 1, 4, 1, 2, 3, 1, 1, 4, 1, 2, 4, 4, 3, 2, 4, 2, 4, 3, 4, 4, 4, 2, 3,
                 2, 4, 2, 3, 1, 4, 1, 4, 1, 1, 3, 4, 1, 4, 4, 4, 1, 3, 3, 1, 3, 4, 3, 4, 2, 3, 3, 1,
                 2, 1, 2, 4, 4, 3, 3, 4, 1, 2, 1, 3, 1, 4, 4, 3, 3, 3, 4, 3, 1, 3, 1, 3, 3, 2, 1,
                 3},
                {3, 4, 3, 4, 4, 2, 4, 1, 2, 1, 2, 1, 1, 4, 3, 2, 3, 2, 1, 4, 4, 4, 1, 1, 2, 2, 1, 2,
                 3, 1, 1, 4, 2, 1, 2, 1, 4, 4, 1, 1, 4, 3, 1, 1, 2, 2, 4, 3, 4, 4, 3, 2, 4, 1, 4, 3,
                 1, 1, 1, 1, 3, 3, 1, 4, 1, 1, 2, 2, 4, 4, 4, 1, 3, 1, 1, 3, 1, 3, 1, 2, 3, 2, 2,
                 3},
                {4, 3, 2, 2, 1, 4, 1, 2, 2, 4, 1, 3, 2, 4, 4, 2, 1, 1, 4, 2, 3, 2, 4, 1, 2, 2, 2, 3,
                 2, 2, 2, 3, 4, 2, 1, 2, 3, 4, 4, 3, 2, 2, 4, 1, 4, 4, 3, 3, 3, 3, 3, 2, 3, 1, 4, 3,
                 4, 4, 1, 1, 3, 4, 1, 2, 1, 3, 1, 4, 4, 3, 3, 1, 2, 2, 4, 4, 1, 1, 2, 3, 3, 4, 2,
                 2},
                {1, 4, 2, 1, 4, 3, 4, 2, 3, 4, 4, 4, 3, 3, 4, 4, 3, 3, 1, 1, 4, 4, 4, 3, 2, 3, 2, 4,
                 4, 3, 4, 3, 1, 3, 2, 2, 2, 4, 4, 3, 3, 1, 2, 3, 2, 1, 2, 4, 4, 1, 1, 2, 1, 4, 1, 4,
                 1, 2, 1, 1, 3, 3, 4, 3, 3, 4, 4, 4, 1, 4, 3, 4, 4, 2, 2, 2, 2, 4, 2, 1, 3, 4, 3,
                 3},
                {1, 3, 1, 3, 2, 3, 2, 4, 2, 2, 3, 3, 3, 1, 4, 1, 1, 1, 3, 4, 3, 1, 1, 2, 4, 4, 1, 2,
                 1, 1, 1, 2, 3, 1, 1, 2, 3, 4, 2, 2, 1, 1, 3, 3, 3, 4, 4, 3, 1, 2, 2, 3, 2, 4, 2, 3,
                 2, 4, 1, 3, 4, 1, 1, 2, 1, 4, 1, 1, 4, 3, 4, 4, 3, 1, 1, 3, 1, 1, 3, 4, 1, 4, 3,
                 4},
                {1, 2, 1, 3, 4, 2, 4, 2, 4, 1, 1, 3, 1, 1, 1, 4, 1, 1, 3, 4, 2, 4, 4, 1, 4, 3, 1, 4,
                 4, 3, 4, 2, 1, 4, 4, 4, 1, 4, 2, 1, 1, 2, 3, 3, 2, 1, 2, 1, 4, 4, 4, 2, 4, 3, 3, 1,
                 3, 3, 1, 4, 2, 3, 2, 1, 4, 4, 4, 3, 2, 2, 3, 2, 2, 2, 3, 2, 2, 3, 4, 4, 4, 3, 1,
                 4},
                {4, 1, 1, 1, 1, 4, 2, 4, 3, 3, 1, 4, 3, 1, 4, 4, 2, 4, 1, 2, 2, 2, 3, 2, 3, 3, 3, 4,
                 1, 4, 1, 1, 3, 3, 4, 1, 1, 2, 1, 4, 2, 4, 1, 3, 1, 4, 1, 1, 2, 3, 3, 4, 3, 4, 4, 3,
                 4, 1, 3, 4, 3, 2, 2, 4, 4, 4, 3, 1, 3, 4, 4, 1, 2, 4, 2, 3, 2, 4, 3, 3, 1, 2, 2,
                 1},
                {2, 3, 4, 3, 1, 4, 2, 1, 3, 4, 2, 4, 4, 1, 2, 3, 3, 4, 4, 2, 1, 2, 2, 3, 3, 4, 1, 3,
                 3, 2, 4, 2, 4, 1, 1, 1, 1, 4, 1, 2, 3, 3, 2, 1, 3, 1, 2, 2, 2, 2, 1, 2, 2, 4, 3, 1,
                 2, 4, 2, 4, 4, 2, 4, 4, 1, 1, 2, 4, 1, 3, 2, 1, 3, 3, 3, 2, 4, 1, 2, 4, 1, 4, 1,
                 3},
                {4, 2, 3, 1, 1, 4, 3, 1, 2, 2, 3, 4, 4, 2, 3, 3, 3, 2, 2, 2, 1, 1, 2, 2, 2, 4, 1, 3,
                 1, 2, 4, 2, 2, 2, 2, 3, 3, 4, 4, 2, 4, 4, 3, 2, 2, 3, 1, 1, 1, 2, 1, 2, 3, 3, 4, 4,
                 1, 2, 2, 2, 2, 2, 4, 4, 2, 1, 4, 1, 3, 2, 1, 4, 4, 3, 3, 4, 1, 2, 4, 4, 4, 4, 1,
                 2},
                {4, 4, 4, 2, 3, 4, 3, 4, 1, 3, 2, 2, 4, 1, 1, 3, 4, 2, 4, 4, 2, 1, 4, 4, 2, 4, 1, 2,
                 4, 3, 1, 1, 2, 1, 1, 3, 4, 3, 2, 3, 1, 2, 4, 2, 3, 2, 3, 3, 1, 3, 4, 4, 1, 1, 3, 1,
                 1, 1, 4, 4, 2, 2, 3, 1, 3, 3, 4, 2, 4, 4, 1, 3, 3, 4, 2, 2, 4, 3, 1, 1, 2, 2, 3,
                 2},
                {2, 1, 3, 2, 2, 1, 3, 1, 4, 3, 2, 4, 2, 3, 3, 1, 2, 3, 4, 4, 3, 3, 2, 4, 1, 2, 3, 2,
                 4, 4, 1, 4, 4, 4, 3, 2, 1, 4, 2, 3, 3, 3, 2, 2, 2, 1, 3, 3, 3, 4, 3, 2, 3, 4, 4, 1,
                 3, 3, 4, 3, 1, 4, 2, 2, 4, 1, 3, 1, 2, 2, 4, 4, 1, 2, 3, 4, 2, 1, 1, 2, 1, 4, 2,
                 3},
                {2, 3, 1, 1, 2, 3, 3, 1, 1, 4, 2, 4, 2, 1, 2, 2, 3, 2, 1, 1, 3, 4, 1, 1, 4, 2, 4, 4,
                 4, 1, 2, 1, 3, 3, 4, 1, 1, 3, 1, 1, 1, 3, 3, 1, 2, 3, 4, 2, 2, 1, 2, 1, 3, 4, 1, 3,
                 1, 1, 2, 1, 4, 2, 4, 1, 1, 2, 2, 4, 3, 4, 2, 4, 3, 1, 3, 1, 4, 3, 4, 3, 2, 3, 3,
                 4},
                {2, 4, 2, 1, 3, 1, 3, 2, 3, 3, 1, 4, 3, 2, 4, 3, 2, 3, 3, 2, 1, 4, 2, 3, 1, 1, 4, 4,
                 3, 1, 3, 3, 4, 3, 4, 1, 4, 1, 4, 3, 1, 1, 3, 2, 4, 4, 2, 3, 1, 3, 4, 1, 4, 2, 1, 3,
                 2, 3, 2, 1, 2, 4, 1, 1, 1, 3, 1, 3, 1, 1, 3, 2, 1, 2, 4, 3, 1, 4, 4, 4, 1, 2, 2,
                 2},
                {3, 3, 1, 3, 4, 2, 1, 2, 3, 4, 3, 3, 2, 1, 4, 1, 2, 4, 4, 2, 2, 4, 1, 1, 2, 1, 1, 3,
                 2, 2, 2, 4, 2, 1, 4, 1, 3, 2, 1, 1, 1, 1, 3, 4, 2, 2, 1, 1, 1, 2, 4, 4, 2, 1, 3, 2,
                 4, 2, 2, 4, 3, 2, 2, 1, 1, 1, 4, 1, 3, 4, 3, 1, 2, 3, 4, 2, 1, 3, 4, 1, 3, 1, 4,
                 2},
                {4, 1, 1, 3, 3, 2, 3, 3, 2, 1, 1, 1, 4, 1, 1, 1, 1, 3, 4, 4, 1, 3, 4, 2, 3, 4, 1, 1,
                 3, 3, 4, 1, 1, 1, 3, 2, 3, 1, 2, 3, 2, 2, 1, 4, 3, 1, 3, 3, 1, 2, 2, 3, 1, 4, 3, 2,
                 4, 1, 3, 1, 2, 1, 2, 1, 1, 1, 1, 3, 3, 1, 3, 1, 4, 2, 3, 1, 3, 3, 4, 3, 1, 4, 4,
                 1},
                {2, 2, 3, 2, 2, 3, 2, 2, 2, 3, 2, 1, 4, 2, 4, 3, 2, 4, 4, 4, 4, 2, 2, 2, 2, 4, 2, 2,
                 3, 4, 2, 2, 4, 4, 3, 2, 4, 3, 1, 1, 2, 3, 2, 2, 4, 3, 1, 4, 2, 2, 3, 1, 3, 3, 3, 2,
                 3, 4, 1, 4, 1, 1, 1, 1, 2, 2, 3, 4, 4, 2, 1, 3, 2, 3, 1, 4, 4, 3, 2, 1, 2, 4, 3,
                 3},
                {3, 1, 1, 1, 4, 1, 1, 3, 4, 3, 4, 2, 3, 2, 1, 1, 4, 3, 3, 1, 2, 1, 3, 2, 4, 2, 4, 4,
                 1, 1, 4, 4, 4, 1, 3, 1, 3, 2, 4, 2, 2, 2, 3, 4, 4, 1, 3, 2, 2, 2, 3, 1, 2, 4, 4, 3,
                 2, 2, 3, 1, 3, 3, 1, 4, 2, 4, 1, 4, 4, 1, 2, 3, 3, 3, 1, 4, 1, 4, 2, 4, 1, 4, 2,
                 2},
                {2, 2, 3, 2, 3, 2, 3, 3, 4, 2, 1, 4, 1, 3, 2, 4, 3, 1, 4, 1, 1, 4, 1, 2, 3, 4, 3, 4,
                 3, 2, 3, 3, 4, 2, 3, 3, 2, 3, 2, 2, 3, 1, 3, 1, 1, 2, 1, 4, 2, 3, 3, 2, 1, 3, 2, 1,
                 3, 2, 2, 4, 3, 3, 3, 3, 2, 1, 2, 4, 4, 4, 1, 3, 4, 2, 3, 2, 3, 4, 4, 4, 1, 3, 3,
                 2},
                {2, 3, 2, 1, 3, 2, 3, 4, 1, 1, 4, 4, 1, 4, 2, 1, 1, 1, 1, 3, 4, 2, 1, 2, 3, 1, 2, 3,
                 4, 4, 3, 2, 1, 4, 2, 2, 3, 4, 3, 3, 4, 2, 4, 2, 1, 2, 1, 3, 1, 2, 4, 3, 2, 2, 2, 3,
                 4, 4, 3, 3, 2, 3, 2, 1, 4, 4, 2, 1, 3, 1, 2, 1, 4, 4, 2, 1, 1, 1, 2, 1, 2, 3, 1,
                 1},
                {4, 1, 3, 3, 1, 2, 1, 2, 1, 1, 2, 3, 2, 4, 3, 1, 4, 3, 1, 2, 2, 1, 4, 2, 1, 4, 3, 1,
                 4, 3, 2, 4, 2, 1, 2, 4, 3, 3, 4, 4, 1, 2, 4, 4, 1, 4, 3, 2, 3, 4, 4, 4, 1, 3, 1, 2,
                 3, 1, 3, 3, 1, 3, 4, 1, 2, 4, 3, 1, 3, 2, 4, 4, 4, 2, 2, 3, 2, 3, 2, 1, 3, 2, 2,
                 1},
                {4, 1, 3, 1, 4, 3, 4, 1, 4, 4, 1, 2, 4, 2, 3, 4, 1, 1, 3, 4, 4, 2, 2, 3, 3, 2, 4, 3,
                 3, 4, 3, 3, 2, 1, 4, 1, 1, 3, 2, 2, 2, 3, 4, 2, 1, 3, 3, 1, 3, 2, 4, 3, 2, 3, 3, 3,
                 1, 1, 1, 3, 3, 3, 2, 3, 3, 1, 2, 4, 1, 3, 3, 4, 1, 2, 4, 1, 4, 4, 3, 1, 3, 4, 3,
                 3},
                {2, 4, 2, 4, 3, 2, 4, 1, 2, 2, 3, 2, 2, 2, 1, 2, 1, 4, 3, 1, 1, 1, 3, 3, 2, 4, 3, 4,
                 3, 4, 1, 1, 3, 2, 3, 3, 3, 1, 2, 2, 1, 1, 1, 2, 1, 2, 1, 3, 2, 2, 2, 2, 4, 4, 2, 4,
                 4, 3, 4, 1, 1, 4, 1, 3, 1, 2, 4, 4, 1, 3, 1, 4, 1, 1, 4, 2, 1, 2, 2, 1, 3, 1, 4,
                 2},
                {2, 4, 4, 3, 1, 4, 2, 4, 3, 2, 4, 1, 2, 3, 1, 4, 2, 4, 2, 3, 4, 2, 1, 4, 3, 4, 2, 2,
                 3, 4, 3, 4, 4, 2, 1, 4, 3, 3, 2, 2, 4, 3, 4, 4, 3, 1, 2, 4, 3, 3, 3, 4, 4, 4, 1, 3,
                 1, 2, 1, 1, 1, 1, 3, 4, 1, 1, 1, 3, 4, 4, 4, 2, 4, 1, 3, 4, 2, 1, 1, 3, 2, 4, 4,
                 4},
                {1, 3, 1, 1, 2, 4, 3, 4, 3, 3, 4, 4, 3, 2, 2, 2, 2, 2, 4, 2, 2, 4, 1, 3, 2, 2, 4, 1,
                 2, 4, 3, 2, 1, 4, 3, 4, 4, 2, 4, 4, 3, 1, 2, 4, 1, 3, 3, 4, 2, 1, 1, 4, 4, 3, 2, 2,
                 3, 4, 2, 2, 2, 3, 2, 4, 1, 4, 4, 2, 2, 3, 1, 1, 1, 3, 1, 2, 2, 3, 4, 3, 3, 4, 1,
                 1},
                {2, 3, 4, 4, 2, 4, 2, 4, 3, 4, 3, 4, 4, 3, 1, 4, 1, 2, 4, 4, 3, 3, 4, 1, 4, 2, 3, 2,
                 1, 2, 3, 2, 4, 4, 1, 3, 2, 2, 2, 4, 4, 4, 3, 3, 4, 4, 1, 2, 3, 3, 1, 1, 3, 2, 1, 1,
                 2, 3, 2, 1, 4, 1, 1, 4, 3, 1, 3, 2, 4, 1, 3, 1, 2, 3, 2, 4, 3, 1, 2, 3, 2, 3, 4,
                 1},
                {3, 3, 3, 1, 2, 2, 2, 2, 2, 4, 2, 3, 2, 2, 3, 2, 2, 3, 3, 1, 4, 2, 3, 4, 4, 1, 2, 2,
                 3, 2, 1, 3, 4, 3, 2, 3, 1, 2, 1, 4, 2, 4, 3, 3, 4, 2, 2, 4, 3, 2, 1, 2, 4, 1, 2, 4,
                 2, 3, 2, 1, 4, 4, 2, 2, 4, 1, 3, 4, 1, 4, 3, 4, 1, 4, 1, 1, 4, 3, 2, 1, 4, 1, 2,
                 3},
                {1, 4, 4, 4, 3, 1, 1, 4, 3, 1, 2, 4, 2, 1, 3, 2, 2, 4, 3, 4, 4, 2, 4, 3, 3, 1, 4, 2,
                 2, 1, 2, 3, 3, 2, 4, 4, 2, 2, 3, 3, 2, 1, 4, 4, 4, 2, 1, 2, 4, 4, 4, 3, 1, 2, 4, 4,
                 1, 1, 1, 1, 2, 1, 3, 2, 3, 3, 1, 4, 1, 2, 4, 4, 3, 1, 2, 3, 2, 2, 1, 2, 1, 2, 1,
                 1},
                {1, 1, 4, 1, 1, 4, 2, 4, 2, 4, 4, 3, 4, 3, 2, 1, 1, 3, 1, 4, 2, 2, 4, 2, 3, 3, 4, 4,
                 1, 2, 4, 4, 2, 1, 4, 1, 2, 2, 4, 1, 4, 3, 2, 3, 2, 4, 3, 1, 1, 1, 4, 1, 2, 4, 3, 1,
                 4, 3, 4, 1, 3, 4, 1, 2, 2, 2, 1, 1, 3, 4, 3, 3, 3, 2, 1, 1, 3, 4, 4, 3, 3, 3, 4,
                 2},
                {3, 1, 2, 3, 4, 2, 1, 4, 1, 4, 1, 4, 3, 1, 2, 3, 1, 1, 1, 4, 2, 4, 2, 2, 2, 2, 1, 3,
                 2, 3, 4, 4, 4, 2, 3, 1, 2, 1, 3, 4, 3, 1, 1, 1, 3, 1, 4, 4, 4, 2, 4, 2, 4, 2, 2, 4,
                 1, 2, 3, 1, 2, 1, 3, 1, 3, 2, 2, 2, 1, 4, 2, 2, 4, 3, 3, 1, 1, 1, 3, 4, 4, 4, 1,
                 2},
                {4, 4, 3, 3, 3, 2, 1, 3, 2, 1, 2, 1, 2, 3, 1, 2, 4, 2, 4, 2, 1, 4, 2, 3, 2, 2, 2, 3,
                 4, 1, 3, 3, 1, 2, 3, 1, 1, 2, 4, 3, 1, 2, 3, 3, 1, 1, 1, 3, 4, 2, 4, 4, 2, 3, 2, 4,
                 2, 3, 2, 3, 2, 3, 2, 1, 2, 1, 4, 2, 2, 1, 1, 4, 2, 1, 4, 2, 1, 1, 2, 3, 2, 2, 1,
                 1},
                {1, 3, 1, 3, 3, 1, 3, 1, 1, 3, 1, 1, 4, 3, 2, 2, 1, 2, 4, 4, 4, 2, 4, 2, 2, 2, 4, 1,
                 1, 2, 3, 2, 1, 3, 2, 3, 4, 1, 4, 2, 2, 1, 4, 2, 2, 2, 4, 1, 1, 1, 2, 3, 1, 1, 2, 2,
                 1, 2, 2, 4, 4, 1, 2, 4, 2, 2, 2, 2, 3, 4, 2, 1, 4, 3, 1, 2, 4, 4, 1, 3, 2, 1, 1,
                 4},
                {2, 1, 4, 2, 1, 3, 4, 3, 3, 1, 2, 1, 4, 1, 3, 4, 2, 4, 1, 4, 3, 1, 2, 3, 2, 2, 4, 4,
                 4, 2, 1, 4, 4, 1, 1, 2, 3, 2, 3, 3, 4, 2, 3, 1, 1, 2, 1, 2, 2, 3, 4, 4, 3, 4, 1, 4,
                 1, 2, 4, 1, 4, 2, 3, 4, 3, 4, 3, 3, 2, 2, 3, 1, 3, 2, 2, 1, 3, 2, 3, 4, 4, 4, 3,
                 1},
                {4, 2, 1, 3, 3, 2, 3, 4, 3, 1, 1, 1, 3, 4, 1, 2, 2, 3, 4, 3, 1, 4, 3, 4, 2, 2, 2, 2,
                 4, 3, 4, 4, 3, 1, 3, 2, 2, 2, 2, 2, 4, 4, 3, 4, 3, 3, 3, 2, 4, 2, 2, 3, 3, 1, 2, 2,
                 2, 2, 1, 2, 1, 1, 3, 3, 4, 1, 1, 3, 3, 1, 1, 1, 4, 4, 2, 1, 4, 4, 2, 2, 1, 1, 1,
                 1},
                {3, 1, 4, 3, 4, 2, 4, 3, 1, 3, 3, 3, 1, 3, 2, 3, 2, 2, 3, 2, 3, 3, 2, 2, 4, 3, 2, 2,
                 1, 1, 3, 3, 4, 1, 4, 2, 2, 4, 2, 2, 2, 1, 2, 3, 1, 2, 3, 2, 1, 2, 3, 2, 4, 4, 3, 4,
                 4, 3, 2, 3, 4, 2, 2, 4, 2, 1, 2, 3, 2, 1, 2, 1, 3, 4, 4, 3, 4, 2, 3, 1, 4, 2, 3,
                 4},
                {4, 4, 4, 2, 3, 1, 1, 2, 1, 4, 4, 3, 1, 1, 1, 1, 1, 3, 4, 1, 2, 3, 4, 3, 2, 2, 2, 1,
                 3, 3, 4, 4, 2, 3, 3, 2, 1, 1, 4, 1, 4, 3, 3, 2, 3, 4, 3, 4, 4, 4, 1, 1, 3, 2, 2, 1,
                 2, 2, 2, 2, 1, 3, 4, 2, 4, 4, 1, 3, 2, 4, 3, 1, 3, 1, 4, 1, 4, 2, 2, 1, 4, 1, 3,
                 3},
                {1, 3, 3, 1, 4, 1, 4, 4, 1, 2, 1, 1, 2, 2, 3, 1, 2, 3, 4, 4, 1, 1, 2, 1, 3, 2, 2, 2,
                 3, 2, 4, 3, 4, 4, 3, 4, 4, 3, 3, 1, 1, 1, 4, 3, 2, 2, 2, 2, 4, 3, 4, 1, 4, 3, 3, 3,
                 3, 2, 3, 1, 1, 3, 1, 4, 1, 1, 3, 2, 4, 3, 3, 4, 4, 1, 1, 3, 1, 2, 4, 2, 1, 4, 4,
                 1},
                {1, 2, 2, 1, 4, 4, 3, 3, 1, 4, 4, 2, 3, 2, 2, 3, 4, 1, 3, 3, 4, 4, 3, 3, 4, 2, 1, 3,
                 3, 3, 1, 1, 3, 4, 3, 1, 4, 1, 1, 4, 3, 2, 4, 3, 3, 4, 4, 4, 1, 2, 4, 4, 4, 2, 4, 1,
                 4, 4, 2, 3, 1, 1, 1, 4, 2, 2, 2, 1, 3, 1, 2, 1, 4, 4, 1, 3, 2, 1, 1, 4, 1, 4, 2,
                 2},
                {3, 2, 2, 1, 3, 3, 3, 4, 1, 4, 3, 2, 3, 4, 3, 4, 3, 2, 3, 2, 2, 1, 2, 2, 3, 2, 3, 3,
                 3, 1, 3, 1, 3, 2, 2, 3, 4, 4, 1, 2, 2, 2, 2, 3, 3, 1, 3, 4, 1, 1, 1, 1, 1, 4, 1, 2,
                 3, 1, 2, 2, 4, 4, 2, 4, 1, 4, 3, 3, 3, 3, 1, 3, 1, 3, 4, 1, 2, 3, 4, 2, 1, 3, 1,
                 3},
                {3, 1, 3, 2, 1, 2, 1, 4, 3, 3, 1, 1, 2, 1, 3, 3, 2, 2, 1, 2, 4, 2, 1, 4, 2, 2, 2, 1,
                 3, 4, 2, 4, 1, 3, 2, 4, 1, 4, 3, 3, 2, 2, 3, 3, 1, 3, 4, 4, 4, 1, 2, 1, 1, 3, 4, 3,
                 1, 4, 3, 1, 1, 2, 3, 3, 4, 1, 2, 2, 2, 1, 4, 2, 3, 3, 4, 3, 1, 1, 2, 1, 2, 1, 2,
                 2},
                {2, 3, 1, 3, 4, 4, 2, 3, 3, 3, 4, 4, 2, 4, 4, 2, 1, 3, 2, 2, 2, 1, 3, 1, 3, 3, 2, 3,
                 2, 3, 2, 2, 4, 1, 4, 1, 2, 4, 3, 2, 2, 1, 1, 2, 3, 1, 1, 2, 3, 1, 4, 4, 3, 2, 1, 2,
                 2, 4, 4, 3, 2, 2, 2, 2, 2, 4, 1, 4, 2, 4, 3, 4, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 1,
                 1},
                {2, 3, 1, 1, 4, 4, 2, 3, 4, 2, 3, 3, 4, 2, 2, 1, 4, 4, 2, 4, 2, 2, 1, 1, 3, 1, 2, 2,
                 1, 4, 1, 3, 1, 3, 2, 3, 4, 3, 1, 2, 2, 4, 3, 2, 4, 4, 3, 4, 2, 1, 4, 1, 1, 4, 2, 1,
                 1, 1, 3, 2, 3, 2, 2, 1, 4, 2, 2, 3, 1, 4, 4, 3, 2, 2, 4, 3, 1, 1, 4, 4, 1, 3, 4,
                 1},
                {1, 1, 2, 2, 1, 4, 1, 2, 4, 1, 1, 2, 3, 1, 4, 3, 1, 3, 3, 4, 2, 1, 4, 3, 3, 1, 2, 4,
                 3, 1, 2, 1, 1, 1, 4, 1, 3, 3, 1, 4, 3, 3, 3, 4, 4, 2, 2, 1, 4, 2, 4, 3, 4, 3, 2, 2,
                 1, 2, 3, 4, 4, 3, 1, 3, 4, 4, 3, 2, 1, 4, 3, 1, 1, 3, 1, 1, 4, 1, 3, 1, 1, 1, 3,
                 4},
                {1, 2, 3, 1, 3, 4, 4, 4, 3, 1, 4, 4, 2, 1, 4, 1, 4, 4, 4, 4, 4, 2, 1, 2, 4, 2, 4, 4,
                 1, 4, 4, 1, 3, 1, 2, 4, 1, 1, 1, 1, 1, 3, 4, 4, 1, 3, 3, 3, 3, 2, 3, 2, 4, 3, 3, 3,
                 4, 3, 1, 2, 1, 1, 1, 1, 2, 1, 2, 3, 3, 2, 2, 3, 1, 1, 1, 2, 3, 1, 1, 2, 3, 1, 2,
                 3},
                {2, 1, 3, 3, 4, 3, 2, 4, 1, 1, 1, 4, 4, 4, 2, 2, 1, 4, 1, 2, 1, 4, 1, 3, 3, 2, 3, 1,
                 2, 2, 2, 2, 2, 2, 4, 1, 4, 2, 4, 4, 4, 3, 3, 3, 4, 1, 1, 2, 2, 1, 4, 2, 2, 1, 2, 4,
                 3, 1, 4, 1, 1, 2, 2, 1, 2, 1, 3, 1, 4, 1, 2, 3, 3, 4, 2, 1, 1, 1, 4, 4, 2, 4, 3,
                 2},
                {4, 3, 1, 3, 3, 4, 1, 2, 2, 3, 3, 1, 4, 2, 2, 2, 2, 3, 4, 2, 3, 3, 1, 3, 4, 3, 2, 1,
                 1, 1, 4, 3, 1, 2, 2, 4, 1, 2, 2, 4, 1, 1, 1, 3, 3, 3, 2, 3, 2, 3, 4, 1, 4, 4, 2, 4,
                 3, 1, 3, 4, 1, 1, 3, 4, 4, 4, 4, 1, 1, 2, 1, 1, 3, 3, 1, 1, 2, 2, 2, 3, 2, 2, 2,
                 2},
                {3, 1, 3, 4, 2, 2, 2, 2, 1, 3, 2, 4, 2, 2, 2, 2, 4, 1, 4, 1, 1, 2, 4, 2, 3, 2, 4, 3,
                 2, 2, 2, 3, 1, 2, 4, 3, 2, 4, 3, 1, 2, 2, 1, 1, 3, 1, 3, 3, 1, 4, 4, 2, 1, 1, 1, 4,
                 2, 1, 2, 2, 3, 2, 1, 1, 2, 3, 3, 1, 1, 4, 3, 1, 4, 1, 2, 4, 3, 2, 3, 3, 1, 1, 2,
                 3},
                {4, 3, 2, 2, 4, 4, 2, 4, 2, 3, 3, 1, 1, 4, 4, 2, 1, 1, 1, 3, 3, 3, 1, 2, 1, 2, 1, 1,
                 1, 1, 1, 4, 4, 3, 1, 3, 2, 4, 4, 4, 1, 1, 1, 1, 4, 3, 2, 3, 1, 3, 3, 1, 2, 2, 1, 4,
                 1, 1, 4, 2, 4, 3, 4, 4, 3, 2, 4, 4, 2, 2, 1, 1, 3, 1, 3, 3, 3, 1, 4, 1, 2, 4, 4,
                 2},
                {3, 3, 2, 4, 1, 2, 1, 4, 4, 3, 3, 2, 2, 2, 1, 3, 4, 2, 4, 3, 1, 1, 2, 3, 2, 2, 4, 1,
                 2, 3, 1, 3, 2, 1, 4, 2, 3, 2, 3, 2, 3, 1, 4, 3, 1, 3, 2, 3, 2, 3, 3, 1, 3, 3, 4, 1,
                 4, 1, 2, 4, 4, 4, 1, 1, 2, 4, 2, 4, 4, 3, 4, 1, 2, 1, 3, 1, 4, 1, 2, 2, 1, 2, 4,
                 4},
                {4, 2, 3, 3, 1, 4, 4, 3, 3, 4, 3, 2, 1, 3, 2, 1, 3, 2, 4, 4, 3, 4, 4, 2, 3, 3, 3, 1,
                 4, 4, 2, 3, 3, 1, 1, 3, 3, 1, 3, 4, 3, 3, 4, 4, 3, 1, 2, 4, 1, 2, 1, 4, 1, 2, 3, 2,
                 4, 4, 3, 3, 3, 1, 4, 1, 2, 1, 2, 4, 3, 1, 4, 4, 4, 2, 3, 4, 4, 3, 1, 1, 2, 2, 2,
                 1},
                {2, 2, 4, 4, 2, 3, 2, 1, 1, 2, 2, 1, 1, 3, 4, 2, 4, 2, 2, 3, 4, 3, 3, 2, 4, 2, 1, 4,
                 4, 1, 2, 1, 2, 3, 1, 2, 2, 3, 1, 4, 3, 2, 4, 2, 3, 4, 2, 1, 4, 3, 1, 1, 4, 2, 1, 3,
                 4, 4, 4, 3, 3, 4, 1, 3, 4, 2, 1, 2, 3, 3, 2, 3, 1, 3, 4, 2, 1, 1, 1, 4, 3, 1, 2,
                 4},
                {2, 3, 2, 2, 1, 4, 1, 1, 1, 4, 4, 3, 2, 3, 4, 3, 3, 1, 4, 2, 2, 2, 2, 3, 4, 3, 3, 2,
                 4, 4, 4, 3, 2, 1, 4, 3, 3, 4, 2, 1, 4, 4, 4, 4, 1, 4, 3, 4, 1, 4, 1, 4, 1, 3, 4, 3,
                 3, 3, 3, 1, 3, 2, 4, 2, 2, 1, 3, 2, 3, 4, 2, 2, 2, 3, 3, 4, 4, 4, 3, 1, 2, 3, 1,
                 2},
                {4, 3, 4, 2, 1, 3, 2, 3, 2, 4, 4, 1, 1, 2, 2, 2, 3, 1, 2, 1, 2, 1, 2, 4, 4, 1, 2, 4,
                 4, 2, 4, 3, 2, 4, 3, 4, 1, 1, 4, 1, 1, 2, 2, 3, 1, 2, 2, 4, 1, 4, 4, 2, 3, 4, 3, 4,
                 1, 2, 1, 1, 3, 2, 3, 3, 4, 1, 2, 1, 3, 3, 4, 3, 4, 4, 4, 1, 2, 4, 1, 1, 3, 3, 3,
                 4},
                {3, 4, 4, 2, 4, 1, 2, 2, 1, 1, 2, 2, 1, 4, 1, 1, 4, 1, 1, 2, 3, 1, 2, 4, 1, 4, 2, 4,
                 2, 1, 4, 1, 1, 3, 4, 1, 3, 3, 1, 1, 2, 4, 2, 1, 2, 3, 1, 1, 2, 1, 4, 3, 3, 3, 1, 3,
                 4, 2, 4, 2, 3, 3, 4, 2, 1, 4, 2, 4, 1, 1, 3, 1, 3, 2, 4, 4, 2, 1, 4, 3, 2, 3, 2,
                 4},
                {1, 2, 1, 2, 4, 3, 4, 1, 4, 2, 4, 2, 3, 1, 3, 1, 4, 4, 2, 3, 3, 2, 1, 1, 3, 4, 2, 1,
                 1, 1, 1, 2, 3, 1, 3, 1, 1, 1, 4, 2, 4, 1, 4, 1, 2, 4, 1, 3, 2, 3, 2, 3, 4, 3, 3, 4,
                 2, 4, 2, 2, 1, 4, 1, 1, 3, 3, 4, 4, 4, 1, 4, 4, 4, 2, 4, 4, 1, 1, 3, 3, 4, 2, 3,
                 3},
                {3, 3, 1, 4, 3, 3, 2, 2, 4, 3, 3, 3, 1, 2, 3, 1, 2, 1, 3, 2, 3, 2, 4, 2, 4, 4, 2, 4,
                 1, 4, 1, 2, 1, 1, 4, 2, 4, 2, 1, 4, 1, 3, 3, 1, 1, 1, 4, 1, 1, 3, 3, 3, 3, 1, 1, 3,
                 1, 1, 2, 4, 1, 1, 3, 4, 1, 2, 2, 3, 4, 4, 1, 1, 4, 2, 4, 4, 4, 4, 4, 4, 2, 4, 3,
                 3},
                {1, 1, 1, 1, 3, 2, 4, 1, 3, 3, 1, 4, 1, 3, 2, 1, 4, 2, 3, 4, 3, 3, 2, 4, 3, 3, 4, 4,
                 4, 3, 2, 4, 3, 1, 1, 3, 2, 1, 2, 3, 4, 3, 4, 2, 4, 3, 4, 3, 2, 3, 3, 4, 3, 2, 1, 4,
                 4, 4, 1, 2, 1, 2, 1, 2, 1, 3, 2, 2, 4, 4, 2, 4, 2, 3, 4, 3, 4, 4, 3, 4, 3, 1, 1,
                 2},
                {3, 2, 2, 1, 3, 2, 4, 2, 3, 2, 3, 1, 4, 2, 3, 3, 3, 4, 1, 3, 3, 1, 1, 1, 4, 2, 3, 4,
                 4, 1, 1, 1, 1, 1, 3, 4, 1, 2, 2, 4, 1, 1, 4, 1, 4, 1, 4, 1, 4, 4, 3, 4, 1, 1, 1, 4,
                 3, 2, 3, 1, 3, 4, 2, 2, 4, 4, 4, 2, 2, 1, 2, 1, 4, 4, 1, 2, 3, 1, 2, 3, 1, 1, 3,
                 3},
                {2, 1, 3, 2, 1, 1, 4, 2, 1, 3, 2, 4, 3, 3, 1, 4, 2, 3, 3, 4, 4, 2, 2, 3, 2, 2, 4, 4,
                 4, 2, 3, 3, 4, 2, 3, 4, 2, 2, 1, 4, 4, 4, 2, 1, 2, 2, 2, 2, 3, 1, 4, 2, 3, 3, 3, 2,
                 2, 3, 1, 2, 4, 2, 3, 2, 3, 3, 4, 4, 1, 1, 2, 2, 3, 2, 4, 3, 1, 2, 4, 1, 2, 1, 2,
                 3},
                {2, 2, 3, 3, 1, 2, 4, 2, 3, 1, 3, 4, 1, 1, 3, 4, 3, 3, 1, 3, 4, 2, 2, 3, 3, 2, 1, 4,
                 3, 4, 2, 2, 4, 2, 3, 4, 3, 4, 4, 2, 2, 2, 4, 3, 4, 2, 4, 2, 3, 2, 1, 3, 1, 2, 4, 1,
                 1, 1, 2, 4, 1, 3, 1, 3, 2, 1, 1, 4, 4, 2, 1, 1, 2, 1, 2, 3, 4, 3, 4, 1, 2, 2, 3,
                 2},
                {4, 4, 3, 4, 4, 1, 2, 2, 1, 4, 4, 4, 3, 1, 3, 4, 4, 2, 3, 2, 4, 4, 4, 2, 1, 3, 1, 1,
                 2, 1, 3, 3, 1, 3, 4, 3, 3, 3, 3, 2, 1, 3, 3, 3, 1, 2, 4, 2, 2, 2, 2, 2, 2, 2, 3, 2,
                 1, 1, 2, 4, 4, 1, 2, 4, 1, 1, 1, 3, 2, 2, 4, 3, 1, 2, 1, 3, 1, 4, 4, 1, 3, 4, 3,
                 4},
                {1, 1, 1, 3, 2, 2, 2, 2, 3, 1, 1, 2, 1, 4, 1, 3, 3, 3, 4, 2, 4, 2, 4, 3, 1, 3, 3, 4,
                 2, 1, 2, 2, 1, 1, 1, 3, 3, 1, 1, 1, 1, 4, 3, 4, 2, 1, 3, 3, 3, 3, 4, 3, 3, 2, 4, 2,
                 3, 2, 2, 2, 3, 2, 3, 3, 4, 3, 2, 3, 2, 4, 4, 3, 1, 3, 2, 2, 1, 4, 3, 4, 3, 2, 1,
                 3},
                {4, 3, 4, 2, 1, 3, 4, 3, 1, 4, 3, 2, 1, 2, 1, 1, 2, 2, 4, 3, 4, 1, 4, 1, 2, 4, 1, 1,
                 4, 1, 4, 4, 3, 2, 2, 4, 1, 3, 4, 4, 4, 1, 2, 3, 1, 4, 1, 1, 3, 1, 1, 3, 1, 2, 1, 1,
                 2, 2, 3, 3, 1, 2, 3, 3, 1, 1, 3, 1, 3, 3, 1, 4, 4, 3, 1, 2, 1, 3, 3, 4, 4, 2, 2,
                 4},
                {3, 2, 4, 1, 2, 3, 4, 1, 1, 1, 3, 3, 1, 2, 3, 4, 1, 2, 4, 2, 2, 3, 3, 3, 3, 4, 2, 2,
                 2, 2, 4, 2, 3, 3, 4, 1, 1, 1, 3, 4, 2, 3, 3, 4, 1, 2, 2, 3, 3, 2, 3, 2, 4, 1, 2, 2,
                 2, 2, 4, 4, 4, 4, 4, 1, 2, 1, 1, 1, 1, 2, 1, 1, 4, 3, 1, 1, 3, 4, 2, 2, 4, 1, 4,
                 3},
                {3, 3, 1, 4, 4, 2, 2, 3, 4, 2, 3, 1, 1, 2, 1, 2, 2, 4, 2, 3, 3, 2, 4, 2, 3, 3, 4, 3,
                 4, 1, 2, 4, 3, 4, 4, 3, 2, 3, 3, 1, 1, 3, 3, 1, 3, 3, 3, 2, 1, 1, 1, 1, 4, 4, 4, 1,
                 1, 4, 2, 1, 1, 1, 2, 4, 2, 1, 3, 3, 1, 3, 2, 3, 2, 4, 3, 2, 2, 3, 2, 4, 1, 4, 3,
                 3},
                {3, 4, 4, 1, 1, 1, 2, 4, 2, 1, 3, 4, 3, 3, 3, 3, 2, 1, 2, 1, 2, 1, 3, 1, 4, 4, 2, 4,
                 4, 4, 1, 3, 4, 4, 3, 3, 2, 3, 4, 4, 2, 2, 1, 2, 4, 1, 1, 2, 1, 3, 2, 1, 2, 3, 3, 1,
                 3, 2, 2, 2, 1, 4, 4, 2, 4, 2, 2, 3, 2, 1, 4, 3, 4, 4, 3, 1, 3, 4, 2, 4, 4, 3, 2,
                 4},
                {2, 3, 2, 1, 1, 1, 3, 3, 1, 4, 3, 2, 1, 4, 1, 4, 1, 4, 2, 3, 1, 2, 2, 3, 1, 1, 2, 3,
                 3, 4, 2, 1, 2, 4, 2, 4, 4, 1, 1, 3, 3, 4, 3, 4, 3, 2, 2, 2, 2, 2, 1, 3, 4, 4, 2, 4,
                 2, 1, 2, 3, 3, 1, 4, 4, 3, 2, 2, 4, 2, 1, 1, 2, 4, 2, 1, 2, 3, 1, 2, 3, 2, 1, 1,
                 4},
                {2, 2, 4, 1, 1, 3, 4, 4, 4, 1, 4, 1, 2, 4, 4, 4, 3, 3, 2, 3, 3, 4, 1, 3, 1, 1, 3, 3,
                 4, 4, 4, 1, 1, 2, 2, 3, 3, 3, 3, 2, 2, 1, 3, 3, 4, 3, 4, 2, 4, 4, 1, 3, 4, 2, 2, 4,
                 4, 3, 3, 1, 1, 2, 4, 4, 1, 4, 2, 3, 3, 1, 1, 3, 4, 3, 4, 3, 4, 1, 4, 4, 4, 3, 3,
                 3},
                {2, 2, 2, 4, 1, 3, 4, 1, 1, 1, 2, 2, 3, 4, 4, 1, 3, 3, 3, 2, 3, 3, 2, 1, 4, 1, 4, 3,
                 4, 3, 3, 2, 1, 3, 2, 3, 3, 3, 2, 1, 4, 2, 2, 3, 3, 1, 3, 1, 2, 2, 1, 1, 3, 3, 2, 1,
                 2, 3, 4, 3, 4, 3, 2, 2, 1, 3, 2, 3, 1, 1, 2, 2, 2, 1, 3, 3, 3, 4, 2, 2, 2, 1, 3,
                 2},
                {2, 4, 3, 1, 1, 2, 4, 2, 3, 2, 3, 3, 4, 3, 2, 3, 2, 1, 4, 3, 3, 3, 2, 3, 2, 3, 2, 3,
                 2, 3, 2, 1, 4, 3, 1, 4, 2, 1, 3, 2, 1, 1, 3, 4, 4, 1, 1, 3, 2, 2, 3, 2, 4, 4, 4, 4,
                 4, 1, 2, 2, 3, 3, 4, 2, 3, 2, 3, 4, 1, 2, 3, 2, 2, 2, 3, 2, 3, 1, 2, 1, 4, 4, 4,
                 4},
                {2, 2, 2, 3, 2, 4, 3, 4, 3, 1, 2, 4, 1, 4, 3, 1, 3, 1, 2, 1, 2, 3, 2, 2, 2, 4, 4, 3,
                 4, 2, 4, 1, 1, 1, 2, 2, 4, 4, 2, 1, 2, 3, 1, 1, 4, 1, 4, 1, 1, 3, 3, 1, 3, 2, 1, 2,
                 2, 1, 1, 2, 2, 3, 4, 3, 1, 2, 4, 1, 2, 4, 4, 1, 2, 1, 1, 4, 1, 1, 2, 4, 4, 4, 2,
                 4},
                {2, 2, 1, 2, 1, 3, 1, 4, 3, 4, 3, 4, 2, 2, 3, 1, 2, 4, 3, 2, 2, 4, 1, 1, 3, 3, 1, 1,
                 4, 1, 3, 1, 1, 1, 4, 4, 3, 4, 2, 2, 1, 4, 4, 1, 2, 2, 3, 1, 2, 3, 3, 2, 2, 3, 1, 3,
                 2, 3, 1, 3, 4, 4, 3, 3, 4, 1, 1, 3, 4, 2, 4, 4, 3, 3, 2, 2, 2, 2, 3, 3, 4, 1, 4,
                 2},
                {2, 1, 1, 2, 4, 4, 3, 3, 2, 1, 1, 3, 2, 4, 4, 1, 2, 1, 2, 1, 3, 1, 4, 1, 1, 2, 1, 3,
                 3, 1, 1, 2, 1, 4, 2, 2, 2, 1, 2, 2, 3, 4, 1, 3, 4, 3, 4, 3, 2, 2, 4, 2, 3, 2, 4, 2,
                 4, 1, 3, 3, 2, 3, 2, 4, 4, 2, 4, 3, 2, 1, 2, 1, 4, 4, 4, 2, 4, 2, 4, 3, 2, 2, 1,
                 3},
                {1, 1, 3, 1, 3, 2, 1, 1, 2, 3, 1, 2, 2, 4, 3, 4, 3, 2, 2, 2, 3, 3, 4, 1, 2, 3, 2, 1,
                 4, 3, 3, 1, 2, 2, 4, 1, 1, 3, 2, 3, 1, 2, 1, 4, 1, 4, 1, 4, 4, 4, 3, 4, 1, 2, 2, 3,
                 2, 3, 4, 3, 1, 3, 4, 4, 2, 2, 4, 1, 1, 4, 2, 1, 3, 1, 4, 2, 3, 3, 2, 3, 2, 2, 1,
                 2},
                {2, 1, 1, 2, 3, 2, 3, 4, 3, 3, 2, 1, 3, 1, 3, 3, 3, 3, 4, 4, 4, 4, 2, 1, 4, 3, 4, 4,
                 2, 1, 4, 2, 4, 2, 4, 2, 2, 3, 3, 2, 1, 4, 4, 4, 2, 3, 3, 3, 3, 3, 2, 1, 1, 3, 2, 1,
                 2, 2, 1, 3, 3, 4, 1, 1, 1, 1, 4, 1, 2, 2, 1, 4, 1, 4, 1, 3, 1, 1, 4, 3, 4, 2, 4,
                 2},
                {3, 2, 2, 1, 2, 4, 4, 4, 2, 2, 1, 2, 3, 1, 2, 3, 3, 4, 4, 4, 1, 2, 1, 1, 4, 2, 1, 2,
                 2, 4, 3, 1, 3, 3, 4, 1, 1, 3, 1, 4, 2, 4, 3, 3, 1, 3, 3, 2, 4, 2, 1, 1, 4, 4, 3, 3,
                 1, 4, 3, 2, 4, 1, 1, 3, 3, 2, 2, 2, 4, 3, 3, 4, 4, 4, 3, 2, 1, 4, 3, 1, 4, 2, 2,
                 4},
                {1, 2, 1, 1, 1, 4, 1, 1, 2, 1, 1, 4, 4, 2, 2, 3, 2, 2, 1, 3, 3, 1, 4, 3, 2, 1, 3, 1,
                 4, 2, 3, 4, 1, 3, 2, 1, 2, 4, 4, 1, 2, 3, 3, 4, 1, 4, 3, 4, 3, 4, 4, 4, 1, 4, 3, 4,
                 3, 2, 2, 2, 3, 4, 2, 2, 2, 3, 4, 4, 4, 2, 3, 4, 3, 2, 2, 4, 2, 4, 4, 4, 4, 2, 2,
                 4},
                {2, 3, 2, 3, 1, 4, 1, 4, 4, 2, 3, 2, 2, 3, 4, 1, 1, 1, 3, 2, 3, 2, 2, 3, 4, 3, 2, 4,
                 2, 2, 3, 4, 3, 4, 4, 2, 1, 3, 2, 4, 4, 3, 4, 1, 2, 2, 2, 2, 1, 4, 3, 3, 4, 3, 2, 3,
                 2, 4, 3, 2, 1, 4, 2, 3, 2, 3, 3, 3, 3, 1, 3, 4, 4, 4, 1, 2, 1, 4, 4, 1, 2, 3, 1,
                 1},
                {2, 4, 2, 4, 3, 2, 3, 1, 4, 4, 1, 2, 1, 4, 4, 2, 2, 3, 1, 2, 1, 1, 3, 2, 3, 1, 2, 1,
                 1, 1, 2, 1, 2, 3, 4, 2, 1, 2, 4, 4, 3, 2, 2, 2, 4, 4, 3, 2, 2, 3, 1, 4, 2, 1, 3, 2,
                 2, 4, 3, 4, 1, 4, 2, 4, 2, 2, 4, 2, 4, 1, 3, 3, 4, 2, 2, 3, 1, 3, 2, 1, 1, 2, 4,
                 1}}, 46);
    }

    public static void main(String[] args) {
        String clazz = new Object() {
        }.getClass().getEnclosingClass().getSimpleName();
        org.junit.runner.JUnitCore.main(clazz);
    }
}
